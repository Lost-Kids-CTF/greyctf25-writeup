from math import gcd
from Crypto.Util.number import long_to_bytes

N = 15259097618051614944787283201589661884102249046616617256551480013493757323043057001133186203348289474506700039004930848402024292749905563056243342761253435345816868449755336453407731146923196889610809491263200406510991293039335293922238906575279513387821338778400627499247445875657691237123480841964214842823837627909211018434713132509495011638024236950770898539782783100892213299968842119162995568246332594379413334064200048625302908007017119275389226217690052712216992320294529086400612432370014378344799040883185774674160252898485975444900325929903357977580734114234840431642981854150872126659027766615908376730393
p = None
q = None
e = 65537
c = 6820410793279074698184582789817653270130724082616000242491680434155953264066785246638433152548701097104342512841159863108848825283569511618965315125022079145973783083887057935295021036668795627456282794393398690975486485865242636068814436388602152569008950258223165626016102975011626088643114257324163026095853419397075140539144105058615243349994512495476754237666344974066561982636000283731809741806084909326748565899503330745696805094211629412690046965596957064965140083265525186046896681441692279075201572766504836062294500730288025016825377342799012299214883484810385513662108351683772695197185326845529252411353
mus = set()

with open("dump1.txt", "r") as dump_f:
    lines = dump_f.readlines()[9:-1]
    F_hex = lines[0].strip()
    for line in lines[1:]:
        mu = int(line.strip(), 16)
        if mu != 0:
            mus.add(mu)

with open("dump2.txt", "r") as dump_f:
    lines = dump_f.readlines()[9:-1]
    for line in lines:
        mu = int(line.strip(), 16)
        if mu != 0:
            mus.add(mu)

found = False

for mu1 in mus:
    if found:
        break
    for mu2 in mus:
        if mu1 != mu2 and gcd(mu1-mu2, N) > 1000000:
            print(f"Found a pair: {mu1}, {mu2}")
            print(f"GCD: {gcd(mu1-mu2, N)}")
            p = gcd(mu1-mu2, N)
            found = True
            break

if p:
    q = N // p
    phi = (p - 1) * (q - 1)
    d = pow(e, -1, phi)
    m = pow(c, d, N)
    print(f"Decrypted message: {long_to_bytes(m).decode()}")

